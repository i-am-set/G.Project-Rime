[gd_scene load_steps=7 format=3 uid="uid://bdwxe80vw400y"]

[ext_resource type="FontFile" uid="uid://seeio8ulr1kf" path="res://ui/fonts/FiraCode/FiraCode-Medium.ttf" id="1_6wolk"]
[ext_resource type="Script" path="res://scripts/inventory/item_rect.gd" id="1_61j55"]
[ext_resource type="Texture2D" uid="uid://bvcdb1x5nqo6v" path="res://textures/items/flint_thumbnail.png" id="3_ju0h7"]

[sub_resource type="Theme" id="Theme_34mqv"]
Label/colors/font_shadow_color = Color(0, 0, 0, 0.729412)
Label/font_sizes/font_size = 10
Label/fonts/font = ExtResource("1_6wolk")

[sub_resource type="Shader" id="Shader_mp8ar"]
code = "/**
* Shadow 2D.
* License: CC0
* https://creativecommons.org/publicdomain/zero/1.0/
*/
shader_type canvas_item;
render_mode blend_mix;

uniform vec2 deform = vec2(2.0, 2.0);
uniform vec2 offset = vec2(0.0, 0.0);
uniform vec4 modulate : source_color;
uniform float x_buffer = 2.0;//Increase these if you need your shadow to stretch further
uniform float y_buffer = 2.0;

//uniform vec2 texture_size; //uncomment for GLES2

void vertex() {	
	//This increases the size of the uv so the sprite can be drawn 'out of bounds'
	VERTEX.x *= x_buffer;
	VERTEX.y *= y_buffer;
}

void fragment() {
	
	//This part resizes your sprite back to normal after the uv adjustment
	vec2 uvTest = UV * 2.0 - 1.0;	
	uvTest.x *= x_buffer;
	uvTest.x /= 1.0;
	uvTest.y *= y_buffer;
	uvTest.y /= 1.0;
	uvTest = (uvTest + 1.0) / 2.0;
	COLOR = texture(TEXTURE, uvTest);
	
	vec2 ps = TEXTURE_PIXEL_SIZE;
	vec2 uv = uvTest;
	float sizex = float(textureSize(TEXTURE,int(ps.x)).x); //comment for GLES2
	float sizey = float(textureSize(TEXTURE,int(ps.y)).y); //comment for GLES2
	//float sizex = texture_size.x; //uncomment for GLES2
	//float sizey = texture_size.y; //uncomment for GLES2
	uv.y+=offset.y*ps.y;
	uv.x+=offset.x*ps.x;
	float decalx=((uv.y-ps.x*sizex)*deform.x);
	float decaly=((uv.y-ps.y*sizey)*deform.y);
	uv.x += decalx;
	uv.y += decaly;
	vec4 shadow = vec4(modulate.rgb, texture(TEXTURE, uv).a * modulate.a);
	vec4 col = texture(TEXTURE, uvTest);
	COLOR = mix(shadow, col, col.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_duuyk"]
shader = SubResource("Shader_mp8ar")
shader_parameter/deform = Vector2(0, 0)
shader_parameter/offset = Vector2(-30, -30)
shader_parameter/modulate = Color(0, 0, 0, 0.498039)
shader_parameter/x_buffer = 1.0
shader_parameter/y_buffer = 1.0

[node name="item_rect" type="Control"]
layout_mode = 3
anchors_preset = 0
offset_right = 30.0
offset_bottom = 30.0
theme = SubResource("Theme_34mqv")
script = ExtResource("1_61j55")

[node name="DisplayBackground" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.745098, 0.745098, 0.745098, 0.376471)

[node name="Display" type="TextureRect" parent="."]
material = SubResource("ShaderMaterial_duuyk")
layout_mode = 1
offset_right = 30.0
offset_bottom = 60.0
texture = ExtResource("3_ju0h7")
expand_mode = 1

[node name="HighlightMask" type="ColorRect" parent="Display"]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(1, 1, 1, 0.458824)

[node name="StackLabel" type="Label" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_font_sizes/font_size = 10
text = "1"

[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
