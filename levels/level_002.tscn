[gd_scene load_steps=12 format=3 uid="uid://d154sql0hqfg0"]

[ext_resource type="PackedScene" uid="uid://btv0a42cgxt8g" path="res://levels/WE_test.tscn" id="1_eli8c"]
[ext_resource type="Material" uid="uid://cn1gsy15bkaff" path="res://materials/grid.tres" id="2_hi0o7"]
[ext_resource type="PackedScene" uid="uid://c3ffql15mo0aj" path="res://controllers/fps_controller.tscn" id="3_4a8bs"]
[ext_resource type="Texture2D" uid="uid://ivvpsi314b34" path="res://textures/grid.jpg" id="4_dq6y1"]

[sub_resource type="BoxMesh" id="BoxMesh_gd0ev"]
material = ExtResource("2_hi0o7")
size = Vector3(20, 0.5, 20)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_oahyi"]
data = PackedVector3Array(-10, 0.25, 10, 10, 0.25, 10, -10, -0.25, 10, 10, 0.25, 10, 10, -0.25, 10, -10, -0.25, 10, 10, 0.25, -10, -10, 0.25, -10, 10, -0.25, -10, -10, 0.25, -10, -10, -0.25, -10, 10, -0.25, -10, 10, 0.25, 10, 10, 0.25, -10, 10, -0.25, 10, 10, 0.25, -10, 10, -0.25, -10, 10, -0.25, 10, -10, 0.25, -10, -10, 0.25, 10, -10, -0.25, -10, -10, 0.25, 10, -10, -0.25, 10, -10, -0.25, -10, 10, 0.25, 10, -10, 0.25, 10, 10, 0.25, -10, -10, 0.25, 10, -10, 0.25, -10, 10, 0.25, -10, -10, -0.25, 10, 10, -0.25, 10, -10, -0.25, -10, 10, -0.25, 10, 10, -0.25, -10, -10, -0.25, -10)

[sub_resource type="Shader" id="Shader_cwof1"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.dev4's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = (albedo.rgb * albedo_tex.r) + albedo_tex.g + albedo_tex.b;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = (1.0 - albedo_tex.g) * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bkqgy"]
render_priority = 0
shader = SubResource("Shader_cwof1")
shader_parameter/albedo = Color(1, 0.792157, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0.25, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("4_dq6y1")
shader_parameter/texture_roughness = ExtResource("4_dq6y1")

[sub_resource type="BoxMesh" id="BoxMesh_rnakx"]
material = SubResource("ShaderMaterial_bkqgy")
size = Vector3(6, 0.5, 4)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_xecvi"]
data = PackedVector3Array(-3, 0.25, 2, 3, 0.25, 2, -3, -0.25, 2, 3, 0.25, 2, 3, -0.25, 2, -3, -0.25, 2, 3, 0.25, -2, -3, 0.25, -2, 3, -0.25, -2, -3, 0.25, -2, -3, -0.25, -2, 3, -0.25, -2, 3, 0.25, 2, 3, 0.25, -2, 3, -0.25, 2, 3, 0.25, -2, 3, -0.25, -2, 3, -0.25, 2, -3, 0.25, -2, -3, 0.25, 2, -3, -0.25, -2, -3, 0.25, 2, -3, -0.25, 2, -3, -0.25, -2, 3, 0.25, 2, -3, 0.25, 2, 3, 0.25, -2, -3, 0.25, 2, -3, 0.25, -2, 3, 0.25, -2, -3, -0.25, 2, 3, -0.25, 2, -3, -0.25, -2, 3, -0.25, 2, 3, -0.25, -2, -3, -0.25, -2)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_mf7dp"]
data = PackedVector3Array(-3, 0.25, 2, 3, 0.25, 2, -3, -0.25, 2, 3, 0.25, 2, 3, -0.25, 2, -3, -0.25, 2, 3, 0.25, -2, -3, 0.25, -2, 3, -0.25, -2, -3, 0.25, -2, -3, -0.25, -2, 3, -0.25, -2, 3, 0.25, 2, 3, 0.25, -2, 3, -0.25, 2, 3, 0.25, -2, 3, -0.25, -2, 3, -0.25, 2, -3, 0.25, -2, -3, 0.25, 2, -3, -0.25, -2, -3, 0.25, 2, -3, -0.25, 2, -3, -0.25, -2, 3, 0.25, 2, -3, 0.25, 2, 3, 0.25, -2, -3, 0.25, 2, -3, 0.25, -2, 3, 0.25, -2, -3, -0.25, 2, 3, -0.25, 2, -3, -0.25, -2, 3, -0.25, 2, 3, -0.25, -2, -3, -0.25, -2)

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" parent="." instance=ExtResource("1_eli8c")]

[node name="Floor" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.25, 0)
mesh = SubResource("BoxMesh_gd0ev")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_oahyi")

[node name="FPSController" parent="." instance=ExtResource("3_4a8bs")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 6)

[node name="HighPlatform" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 2, -5)
mesh = SubResource("BoxMesh_rnakx")

[node name="StaticBody3D" type="StaticBody3D" parent="HighPlatform"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="HighPlatform/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_xecvi")

[node name="CrouchLabel" type="Label3D" parent="HighPlatform"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
billboard = 1
text = "Crouch"
font_size = 87
outline_size = 20
uppercase = true

[node name="LowPlatform" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4, 1.5, -5)
mesh = SubResource("BoxMesh_rnakx")

[node name="StaticBody3D" type="StaticBody3D" parent="LowPlatform"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="LowPlatform/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_mf7dp")

[node name="TooLowLabel" type="Label3D" parent="LowPlatform"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3, 0)
billboard = 1
text = "TOO LOW"
font_size = 87
outline_size = 20
uppercase = true
